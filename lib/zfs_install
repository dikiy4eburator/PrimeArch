#!/bin/sh

function f_zfs() {

  if [[ -d "/sys/firmware/efi/efivars" ]];
    then
      echo "UEFI OK"
      break
    else
      echo "NOT UEFI MOD !!!"
      exit
  fi


#Prepare Disklist
#===============================================================================
ls -l /dev/disk/by-id/  > /tmp/hdlist

dialog \
--backtitle "PrimeArch" \
--begin $BoxStartY $BoxStartX \
--title "HDD Auswahl" \
--separate-output \
--checklist "Shoose the harddrives for the ZPool" 15 $BoxWhith 7 \
  $(awk 'NR>=2{ if($9 !~ /part/ ) print $9" "$11" " "off"}' < /tmp/hdlist) \
2>/tmp/hdd_by_id


rm /tmp/hdd_name
# generate harddrive name from id
# ------------------------------------------------------------------------------
while read line
 do
   readlink /dev/disk/by-id/$line | awk -F"../../" '{print $2}' >> /tmp/hdd_name
done < /tmp/hdd_by_id

# reset parttable
while read line
 do
   sgdisk -Z /dev/$line
   sgdisk -g /dev/$line
   sgdisk -o /dev/$line
done < /tmp/hdd_name

# Create new parttable
while read line
 do
   sgdisk -n 1:0:+256M -c 1:"EFI" -t 1:ef00 /dev/$line
   sgdisk -n 2:0:0 -c 2:"ROOT" -t 2:bf00 /dev/$line
done < /tmp/hdd_name
# ------------------------------------------------------------------------------



# Generate HDD Patern and format boot partition
# ------------------------------------------------------------------------------
function f_sata() {
	BOOT_HD=$1"1"
  mkfs.fat -F32 /dev/$BOOT_HD
}


function f_nvme() {
	BOOT_HD=$1"p1"
  mkfs.fat -F32 /dev/$BOOT_HD
}


while read line
 do
  case $line in
    nvme*)
      f_nvme $line ;;
    sd*)
      f_sata $line ;;
  esac
done < /tmp/hdd_name
# ------------------------------------------------------------------------------

awk '{print $1"-part2"}' < /tmp/hdd_by_id > /tmp/part_by_id
#===============================================================================



# zroot struckture
#===============================================================================
#   ZPool
#     |-root
#     |-home
#     |-var
#     |-tmp

#===============================================================================
#   mount order

#     root
#       |-boot
#       |-home
#       |-var
#       |-tmp
#===============================================================================



# Setup zpool and datasets
#===============================================================================
zpool create -f -o ashift=12 -O atime=off -O compression=lz4 -O normalization=formD -O canmount=off zroot raidz $(</tmp/part_by_id)

zfs create -o canmount=off -o mountpoint=none zroot
zfs create -o mountpoint=/ zroot/root
zfs create -o setuid=off -o mountpoint=/home zroot/home
zfs create -o mountpoint=/tmp zroot/tmp
zfs create -o mountpoint=/var zroot/var

zpool set bootfs=zroot/root zroot
zpool export zroot

# MOUNT POOL and BOOT
# ------------------------------------------------------------------------------
zpool import -R /mnt zroot

mkdir /mnt/boot
mount /dev/$BOOT_HD /mnt/boot
# ------------------------------------------------------------------------------

#===============================================================================



# Install base pacages
#===============================================================================
pacstrap /mnt $(awk '{ if($1 !~ /#/) print }' < $working_dir/lib/pakages/pakages_base_zfs)
#===============================================================================



# Generate fstab
#===============================================================================
genfstab -U -p /mnt > /mnt/etc/fstab
#===============================================================================



#GENERATE SYSTEM LOCALE
#===============================================================================
# Set Time
f_set_time_region

case $(</tmp/language) in
		1 )
			f_english ;;
		2 )
			f_german ;;
		3 )
			f_russian ;;
esac

arch-chroot /mnt /bin/bash -c locale-gen
#===============================================================================



# Set hostname
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--begin $BoxStartY $BoxStartX \
--title 'Hostname' \
--inputbox 'Enter the Hostnamen' 8 $BoxWhith \
2>/mnt/etc/hostname
#===============================================================================



#Set ROOT
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--title 'Partitionierung' \
--begin $BoxStartY $BoxStartX \
--yesno '\nDo you want to activate the ROOT accaunt? \n' 7 $BoxWhith \

if [[ $? -eq 0 ]];
	then
		f_root_pw_dialog
	else
		arch-chroot /mnt /bin/bash -c "passwd -l root"
fi
#===============================================================================



# CREATE NEW USER
#===============================================================================
f_create_new_user
#===============================================================================



# INSTALL yaourt
#===============================================================================
mv $working_dir/lib/yaourt.sh /mnt/home/$(</tmp/user_name)/yaourt.sh
arch-chroot /mnt /bin/bash -c "sudo -u $(</tmp/user_name) sh /home/$(</tmp/user_name)/yaourt.sh"
# rm /mnt/home/$(</tmp/user_name)/Addons
#===============================================================================



# COPY system config FILES
#===============================================================================
# LightDm Conf
mv -f $working_dir/lib/lightdm-config/lightdm.conf /mnt/etc/lightdm/lightdm.conf
mv -f $working_dir/lib/zfs/mkinitcpio.conf /mnt/etc/mkinitcpio.conf
mv -f $working_dir/lib/zfs/journald.conf /mnt/etc/systemd/journald.conf
#===============================================================================

read -p "Press enter to continue"

# Desktop installation
#===============================================================================
dialog \
--backtitle "PrimeArch" \
--begin $BoxStartY $BoxStartX \
--title 'Choose you Desktop' \
--menu "" 12 $BoxWhith 6 \
	1 i3 \
	2 xfce \
	3 mate \
	4 plasma \
	5 gnome \
	0 'No Desktop' \
	2>/tmp/desktop

case $(</tmp/desktop) in

	1 )
		f_install_i3 ;;
	2 )
		f_install_xfce ;;
	3 )
		f_install_mate ;;
	4 )
		f_install_plasma ;;
	5 )
		f_install_gnome ;;
	0 )
		 ;;
esac
#===============================================================================



# Grafiktreiber installation
#===============================================================================
dialog \
--backtitle "PrimeArch" \
--begin $BoxStartY $BoxStartX \
--title 'Video driver' \
--menu "" 12 $BoxWhith 6 \
	1 virtualbox \
	2 Nvidia \
	3 ATI \
	4 Intel \
	5 Nouveau \
	0 'No Video driver' \
	2>/tmp/grafik_treiber

case $(</tmp/grafik_treiber) in

	1 )
		pacstrap /mnt virtualbox-guest-dkms virtualbox-guest-utils ;;
	2 )
		pacstrap /mnt nvidia-dkms ;;
	3 )
		pacstrap /mnt xf86-video-ati ;;
	4 )
		pacstrap /mnt xf86-video-intel ;;
	5 )
		pacstrap /mnt xf86-video-nouveau ;;
	0 )
		;;
esac
#===============================================================================



# INSTALL YAOURT COAMETICS
#===============================================================================
f_install_cosmetiks
#===============================================================================



# FIX USER HOME OWNERSHIP
#===============================================================================
arch-chroot /mnt /bin/bash -c "chown -R $(</tmp/user_name):users /home/$(</tmp/user_name)"
arch-chroot /mnt /bin/bash -c "chmod -R 0700 /home/$(</tmp/user_name)"
#===============================================================================



# install_zfs
#===============================================================================
arch-chroot /mnt /bin/bash -c "sudo -u $(</tmp/user_name) yaourt -S --noconfirm zfs-dkms-git"
#===============================================================================



# SET CACHE FILE
#===============================================================================
zpool set cachefile=/etc/zfs/zpool.cache zroot
cp /etc/zfs/zpool.cahe /mnt/etc/zfs/
#===============================================================================


# mkinitcpio
#===============================================================================

# arch-chroot /mnt /bin/bash -c "mkinitcpio -p linux"
#===============================================================================



# START DAEMONS
#===============================================================================
#start system daemons
arch-chroot /mnt /bin/bash -c "systemctl enable acpid"
arch-chroot /mnt /bin/bash -c "systemctl enable ntpd"

# network managment
arch-chroot /mnt /bin/bash -c "systemctl enable avahi-daemon"
arch-chroot /mnt /bin/bash -c "systemctl enable wpa_supplicant"
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
arch-chroot /mnt /bin/bash -c "systemctl enable sshd.socket"

# NFS utils
 arch-chroot /mnt /bin/bash -c "systemctl enable rpcbind"

# Cronie
arch-chroot /mnt /bin/bash -c "systemctl enable cronie.service"

# lightdm
arch-chroot /mnt /bin/bash -c "systemctl enable lightdm.service"

# ZFS
arch-chroot /mnt /bin/bash -c "systemctl enable zfs.target"
arch-chroot /mnt /bin/bash -c "systemctl enable zfs-mount.target"

arch-chroot /mnt /bin/bash -c "systemctl enable zfs-mount.service"
#===============================================================================





# BOOTCTL INSTALLATION
#===============================================================================
arch-chroot /mnt /bin/bash -c "bootctl install"
echo "timeout 3" > /mnt/boot/loader/loader.conf
echo "default arch" >> /mnt/boot/loader/loader.conf

echo "title          PrimeArch ZFS" > /mnt/boot/loader/entries/arch.conf
echo "linux          /vmlinuz-linux" >> /mnt/boot/loader/entries/arch.conf
echo "initrd         /initramfs-linux.img" >> /mnt/boot/loader/entries/arch.conf
echo "options        zfs=zroot/root rw" >> /mnt/boot/loader/entries/arch.conf

#===============================================================================



umount -R /mnt
# zfs set canmount=noauto zroot/ARCH/root
zfs umount -a
zpool export zroot

exit

}
