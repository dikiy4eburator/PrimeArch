#!/bin/sh
loadkeys de

# includes
source /root/lib/efi_handeler   # explicit PATH
source /root/lib/legacy_handeler
source /root/lib/user_handeler



# //////////////////////////////////////////////////////////////////////////////
# //////////////////    VARIABELS DEFINITION  ///////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////

# set Variabels
BoxWhith=75
BoxStartX=2
BoxStartY=2


# //////////////////////////////////////////////////////////////////////////////
# //////////////////    FUNKTION DEFINITION  ///////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////


# arch-chroot Bridge
# Adapted from AIS. An excellent bit of code!
function f_arch_chroot() {
    arch-chroot /mnt /bin/bash -c "${1}"
}



# //////////////////////////////////////////////////////////////////////////////
# //////////////////    START INSTALATION   ////////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////


# Welkom Screan
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Wilkommen' \
  --begin $BoxStartY $BoxStartX \
  --msgbox '

Bitte beantworten Sie einige Fragen zu der Systemconfiguration' 10 $BoxWhith


# Extra Home partition Screan
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Extra HOME Partition' \
  --begin $BoxStartY $BoxStartX \
  --yesno '

Mochten Sie eine extra HOME Partition haben?' 10 $BoxWhith \

if [[ $? -eq 0 ]];
  then
    echo "ja" > /tmp/extrahome
  else
    echo "nein" > /tmp/extrahome
fi



# HDD select Screan

#Prepare Disklist
echo "" > /tmp/hdlist
echo "NAME        GRÖSE   MODELL" >> /tmp/hdlist
echo "---------------------------------------------" >> /tmp/hdlist
lsblk -o NAME,SIZE,MODEL,TYPE | grep disk >> /tmp/hdlist

#Selekt HDD screan
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Gefundene Festplatten' \
  --begin $BoxStartY $BoxStartX \
  --tailboxbg '/tmp/hdlist' 10 $BoxWhith \
  --and-widget --keep-window --begin 13 $BoxStartX \
  --inputbox 'Bitte den Namen der Festplatte eingeben' 10 $BoxWhith \
  2>/tmp/hdd_name



# Show Partitioning info depending on boot mode
if [[ -d "/sys/firmware/efi/efivars" ]];
  then
    dialog \
      --backtitle 'PrimeArch Installer' \
      --title 'Partitions Tabelle' \
      --begin $BoxStartY $BoxStartX \
      --msgbox '

Im folgenden wird das Programm cgdisk gestartet
Bitte erstellen Sie die Partitione in der folgenden Ordnung:

1. EFI ca. 100-256 Mb ( code: ef00 )"
2. SWAP Gröse nach eigenem Ermessen ca. 4-8 Gb ( code: 8200 )

    Wenn Sie keine extra HOME Partition wollen"
    Könne Sie den restlichen Speicher der ROOT Partition zweisen

Ansonsten:
3. ROOT ca. 20-40 Gb ( code: 8300 )
4. HOME rest des Speichers ( code: 8300 )' 20 $BoxWhith


  else
    dialog \
      --backtitle 'PrimeArch Installer' \
      --title 'Partitions Tabelle' \
      --begin $BoxStartY $BoxStartX \
      --msgbox '

Im folgenden wird das Programm cgdisk gestartet
Bitte erstellen Sie die Partitione in der folgenden Ordnung:

1. BOOT ca. 5 Mb ( code: ef02)"
2. SWAP Gröse nach eigenem Ermessen ca. 4-8 Gb ( code: 8200 )

    Wenn Sie keine extra HOME Partition wollen"
    Könne Sie den restlichen Speicher der ROOT Partition zweisen

Ansonsten:
3. ROOT ca. 20-40 Gb ( code: 8300 )
4. HOME rest des Speichers ( code: 8300 )' 20 $BoxWhith

fi

#------------------------------------------------------------------------------

# Start cgdisk
cgdisk /dev/$(</tmp/hdd_name)

# Start HDD preparation
if [[ -d "/sys/firmware/efi/efivars" ]];
  then
    f_install_efi
  else
    f_install_legacy
fi

# Install base pacages
pacstrap /mnt base fish base-devel linux-headers grub os-prober efibootmgr acpid dbus  vim cronie

# Generate fstab
genfstab -U -p /mnt >> /mnt/etc/fstab





# Grafiktreiber installation
dialog \
  --backtitle "PrimeArch" \
  --begin $BoxStartY $BoxStartX \
  --menu "Grafiktreiber wehlen" 15 $BoxWhith 7 \
        1 virtualbox \
        2 Nvidia \
        3 ATI \
        4 Intel \
        5 Nouveau \
        0 'Keine Videotreiber' \
        2>/tmp/grafik_treiber

case $(</tmp/grafik_treiber) in
  1 )
    pacstrap /mnt virtualbox-guest-dkms virtualbox-guest-utils
    ;;
  2 )
    pacstrap /mnt nvidia
    ;;
  3 )
    pacstrap /mnt xf86-video-ati
    ;;
  4 )
    pacstrap /mnt xf86-video-intel
    ;;
  5 )
    pacstrap /mnt xf86-video-nouveau
    ;;
  0)
    break
    ;;
esac



# GUI installation
dialog \
  --backtitle "PrimeArch Installer" \
  --begin $BoxStartY $BoxStartX \
  --menu "Desktop wehlen" 15 $BoxWhith 8 \
        1 i3 \
        2 Xfce \
        3 Mate \
        4 KDE-Plasma \
        5 Gnome \
        6 Deepin \
        0 'Keinen Desktop' \
        2>/tmp/gui


case $(</tmp/gui) in
  1 )
    pacstrap /mnt i3
    ;;
  2 )
    pacstrap /mnt xfce4 xfce4-goodies
    ;;
  3 )
    pacstrap /mnt mate mate-extra
    ;;
  4 )
    pacstrap /mnt plasma
    ;;
  5)
    pacstrap /mnt gnome gnome-extra
    ;;
  6)
    pacstrap /mnt deepin deepin-extra
    ;;
  0)
    break
    ;;
esac




# INSTALL PACAGES
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Pakete installiere' \
  --begin $BoxStartY $BoxStartX \
  --msgbox '

Es werden nun zusäzliche Packete installiert. ' 10 $BoxWhith

#Install GUI pakages
pacstrap /mnt xdg-user-dirs lightdm lightdm-gtk-greeter

#Install Network pakages
pacstrap /mnt avahi networkmanager network-manager-applet nm-connection-editor ntp wireless_tools wpa_supplicant gnome-keyring nfs-utils openssh

#Install Audio pakages
pacstrap /mnt alsa-tools alsa-utils pulseaudio pulseaudio-alsa pavucontrol flac volumeicon audacious

#Install Video pakages
pacstrap /mnt xorg-server xorg-xinit compton ffmpeg vlc mpv

#Install Additional apps
pacstrap /mnt mate-polkit ranger git htop nitrogen terminology
pacstrap /mnt chromium atom pluma dmenu conky dunst hunspell-de
pacstrap /mnt nemo nemo-fileroller rsync cool-retro-term

#Install Themes
pacstrap /mnt lxappearance-gtk3 arc-gtk-theme arc-icon-theme archlinux-wallpaper

#Install fonts
pacstrap /mnt gnome-font-viewer noto-fonts awesome-terminal-fonts ttf-ubuntu-font-family



# Set hostname
dialog \
  --backtitle 'PrimeArch Installer' \
  --begin $BoxStartY $BoxStartX \
  --inputbox 'Bitte Hostnamen eingeben' 10 $BoxWhith \
  2>/mnt/etc/hostname




# Set ROOT Password
dialog \
  --backtitle 'PrimeArch Installer' \
  --begin $BoxStartY $BoxStartX \
  --insecure \
  --passwordbox 'Bitte ROOT Password eingeben' 10 $BoxWhith \
  2>/tmp/root_pw

dialog \
  --backtitle 'PrimeArch Installer' \
  --begin $BoxStartY $BoxStartX \
  --insecure \
  --passwordbox 'Bitte ROOT Password wiederholen' 10 $BoxWhith \
  2>/tmp/root_pw_2

if [[ $(</tmp/root_pw) == $(</tmp/root_pw_2) ]];
  then
    f_set_root_pw
  else
    break
fi





# CREATE NEW USER
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Neuen Benutzer erstellen?' \
  --begin $BoxStartY $BoxStartX \
  --yesno '

Möchten sie einen neuen Benutzer erstellen?' 10 $BoxWhith \

if [[ $? -eq 0 ]]; # IF YES !!!
  then
    dialog \
      --backtitle 'PrimeArch Installer' \
      --begin $BoxStartY $BoxStartX \
      --inputbox 'Bitte Benutzernamen eingeben' 10 $BoxWhith \
      2>/tmp/user_name

      f_arch_chroot "useradd -m -g users -G wheel,storage,power,network,video,audio -s /usr/bin/fish '$(</tmp/user_name)'"

    # Generate Password
    dialog \
      --backtitle 'PrimeArch Installer' \
      --begin $BoxStartY $BoxStartX \
      --insecure \
      --passwordbox "Bitte Password für $(</tmp/user_name) eingeben" 10 $BoxWhith \
      2>/tmp/user_pw

    dialog \
      --backtitle 'PrimeArch Installer' \
      --begin $BoxStartY $BoxStartX \
      --insecure \
      --passwordbox "Bitte Password für $(</tmp/user_name) wiederholen" 10 $BoxWhith \
      2>/tmp/user_pw_2

    if [[ $(</tmp/user_pw) == $(</tmp/user_pw_2) ]];
      then
        f_set_user_pw
      else
        break
    fi

    echo "%wheel ALL=(ALL) ALL" >> /mnt/etc/sudoers

  else
    break
fi


# Spracheinstellungen konfigurieren
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Pakete installiere' \
  --begin $BoxStartY $BoxStartX \
  --tailboxbg 'Spracheinstellungen werden konfiguriert ' 10 $BoxWhith

# /etc/locale.conf
echo LANG=de_DE.UTF-8 > /mnt/etc/locale.conf
echo LANGUAGE=de_DE >> /mnt/etc/locale.conf

# /etc/vconsole.conf
echo KEYMAP=de-latin1-nodeadkeys > /mnt/etc/vconsole.conf

# /etc/locale.gen
echo de_DE.UTF-8 UTF-8 >> /mnt/etc/locale.gen
f_arch-chroot "locale-gen"

# Set Time
rm /mnt/etc/localtime
ln -sf /mnt/usr/share/zoneinfo/Europe/Berlin /mnt/etc/localtime




# GRUB STUFF
dialog \
      --backtitle 'PrimeArch Installer' \
      --title 'GRUB installation' \
      --begin $BoxStartY $BoxStartX \
      --msgbox '

    GRUB wird installiert und konfiguriert' 10 $BoxWhith

    if [[ -d "/sys/firmware/efi/efivars" ]];
      then
        # install grub efi
        f_arch_chroot "grub-install --efi-directory=/boot/efi --bootloader-id=Arch_$(</mnt/etc/hostname)"
      else
        # install grub legacy
        f_arch_chroot "grub-install /dev/$(</tmp/hdd_name)"
    fi

f_arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"



#start system daemons
f_arch_chroot "systemctl enable acpid"
f_arch_chroot "systemctl enable ntpd"
# network managment
f_arch_chroot "systemctl enable avahi-daemon"
f_arch_chroot "systemctl enable wpa_supplicant"
f_arch_chroot "systemctl enable NetworkManager"
# NFS utils
f_arch_chroot "systemctl enable rpcbind"
# Cronie
f_arch_chroot "systemctl enable cronie.service"
#lightdm
f_arch_chroot "systemctl enable lightdm.service"






# Clone i3-config repo
if [[ -f /mnt/bin/i3 ]]; then
  git clone https://github.com/dikiy4eburator/i3-config.git /mnt/home/$(</tmp/user_name)/.config/i3
else
  break
fi

US=$(</tmp/user_name)

# link gtk-theme config
cp -r /root/lib/gtk-3.0 /mnt/home/$US/.config

# Nitrogen config
cp -r /root/lib/nitrogen /mnt/home/$US/.config

# dunst config
cp -r /root/lib/dunst /mnt/home/$US/.config



# link usb automount rule
cp /root/lib/UDEV-automount-usb/10-my-media-automount.rules /mnt/etc/udev/rules.d/10-my-media-automount.rules

#keyboard Conf
cp -r /root/lib/xorg.conf.d/00-keyboard.conf /mnt/etc/X11/xorg.conf.d/00-keyboard.conf




f_arch_chroot "chown -R $(</tmp/user_name) /mnt/home/$(</tmp/user_name)"
f_arch_chroot "chmod -R 0700 /mnt/home/$(</tmp/user_name)"



#f_arch_chroot 'localectl --no-convert set-x11-keymap de'
#f_arch_chroot 'mkinitcpio -P linux'


#Selekt HDD screan
dialog \
  --backtitle 'PrimeArch Installer' \
  --title 'Ende erreicht' \
  --begin $BoxStartY $BoxStartX \
  --tailboxbg 'Die Installation ist Abgeschlossen' 10 $BoxWhith \
  --and-widget --keep-window --begin 13 $BoxStartX \
  --menu "installation Beendet" 15 $BoxWhith 8 \
        1 Rebooten \
        2 Ausschalten \
        3 "Chroot in das neue Systen" \
        2>/tmp/exit

case $(</tmp/exit) in
  1 )
    reboot
    ;;
  2 )
    powerof
    ;;
  3 )
    arch-chroot /mnt
    ;;
esac

exit
