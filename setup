#!/bin/sh

# //////////////////////////////////////////////////////////////////////////////
# //////////////////    VARIABELS DEFINITION  //////////////
# //////////////////////////////////////////////////////////////////////////////



# set Variabels
BoxWhith=70
consol_X=$(tput cols)
consol_Y=$(tput lines)
BoxStartX=$(( ($consol_X - $BoxWhith)/2  ))
BoxStartY=3

working_dir=$(pwd)


# includes
source $working_dir/lib/user_ops
source $working_dir/lib/hard_drive_ops


# //////////////////////////////////////////////////////////////////////////////
# //////////////////    initial update   ///////////////////
# //////////////////////////////////////////////////////////////////////////////

dialog \
--backtitle 'PrimeArch Installer' \
--title 'Wilkommen beim PrimeArch Installer' \
--begin $BoxStartY $BoxStartX \
--msgbox '\nEs wird zuerst ein vollständiges\nSystemupdate durchgeführt' 7 $BoxWhith

echo key update:
echo ------------------------------
pacman-key --refresh-key

echo System update:
echo ------------------------------
pacman -Syyu



# //////////////////////////////////////////////////////////////////////////////
# //////////////////    START INSTALATION   ///////////////////
# //////////////////////////////////////////////////////////////////////////////


# Welkom Screan
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--title 'Wilkommen beim PrimeArch Installer' \
--begin $BoxStartY $BoxStartX \
--msgbox '\n Ok, Last den Spass beginnen' 7 $BoxWhith
#===============================================================================





# Partitionierung AUTO MANUEL
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--title 'Partitionierung' \
--begin $BoxStartY $BoxStartX \
--yesno '\n Mochten Sie eine automatiche Partitionierung durchführen? \n' 7 $BoxWhith \

if [[ $? -eq 0 ]];
	then
    		f_autopartition
	else
        	f_man_part
fi
#===============================================================================





# Install base pacages
#===============================================================================
pacstrap /mnt $(awk '{ if($1 !~ /#/) print }' < $working_dir/lib/pacages)  # $(<$working_dir/lib/pacages)
#===============================================================================





# Generate fstab
#===============================================================================
genfstab -U -p /mnt > /mnt/etc/fstab
#===============================================================================





# Grafiktreiber installation
#===============================================================================
dialog \
--backtitle "PrimeArch" \
--begin $BoxStartY $BoxStartX \
--menu "Grafiktreiber wehlen" 15 $BoxWhith 6 \
1 virtualbox \
2 Nvidia \
3 ATI \
4 Intel \
5 Nouveau \
0 'Keine Videotreiber' \
2>/tmp/grafik_treiber

case $(</tmp/grafik_treiber) in

	1 )
        	pacstrap /mnt virtualbox-guest-dkms virtualbox-guest-utils ;;
    	2 )
        	pacstrap /mnt nvidia-dkms ;;
    	3 )
        	pacstrap /mnt xf86-video-ati ;;
    	4 )
        	pacstrap /mnt xf86-video-intel ;;
    	5 )
        	pacstrap /mnt xf86-video-nouveau ;;
    	0 )
        	break ;;
esac
#===============================================================================





# Set hostname
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--begin $BoxStartY $BoxStartX \
--inputbox 'Bitte Hostnamen eingeben' 8 $BoxWhith \
2>/mnt/etc/hostname
#===============================================================================





#Set ROOT PW
#===============================================================================
f_root_pw_dialog
#===============================================================================





# CREATE NEW USER
#===============================================================================
f_create_new_user
#===============================================================================





#GENERATE SYSTEM LOCALE
#===============================================================================
# /etc/locale.conf
echo LANG=de_DE.UTF-8 >> /mnt/etc/locale.conf
echo LANGUAGE=de_DE >> /mnt/etc/locale.conf

# /etc/vconsole.conf
echo KEYMAP=de-latin1-nodeadkeys > /mnt/etc/vconsole.conf

# Set Time
rm /mnt/etc/localtime
arch-chroot /mnt /bin/bash -c 'ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime'

# /etc/locale.gen
echo de_DE.UTF-8 UTF-8 >> /mnt/etc/locale.gen

arch-chroot /mnt /bin/bash -c locale-gen
#===============================================================================





# COPY CONFIG FILES
#===============================================================================

# USER FILES --------------------

# Clone i3-config
git clone https://github.com/dikiy4eburator/i3-config.git /mnt/home/$(</tmp/user_name)/.config/i3

# APP configs
cp -r -v $working_dir/lib/configs/* /mnt/home/$(</tmp/user_name)/.config/
#--------------------------------



#SYSTEM FILES -------------------

#keyboard Conf
mv -f $working_dir/lib/xorg.conf.d/00-keyboard.conf /mnt/etc/X11/xorg.conf.d/00-keyboard.conf

#keyboard Conf
mv -f $working_dir/lib/lightdm-config/lightdm-gtk-greeter.conf /mnt/etc/lightdm/lightdm-gtk-greeter.conf
#--------------------------------

#===============================================================================




# INSTALL COSMETIC ADONS
#===============================================================================
mv $working_dir/lib/Addons /mnt/home/$(</tmp/user_name)/Addons
arch-chroot /mnt /bin/bash -c "sudo -u $(</tmp/user_name) sh /home/$(</tmp/user_name)/Addons"
rm /mnt/home/$(</tmp/user_name)/Addons
#===============================================================================




# FIX USER HOME OWNERSHIP
#===============================================================================
arch-chroot /mnt /bin/bash -c "chown -R $(</tmp/user_name):users /home/$(</tmp/user_name)"
arch-chroot /mnt /bin/bash -c "chmod -R 0700 /home/$(</tmp/user_name)"
#===============================================================================





#GRUB INSTALLATION
#===============================================================================
if [[ -d "/sys/firmware/efi/efivars" ]];
    	then
       		# install grub efi
       		arch-chroot /mnt /bin/bash -c "grub-install --efi-directory=/boot/efi --bootloader-id=Arch_$(</mnt/etc/hostname)"
    	else
      		# install grub legacy
      		arch-chroot /mnt /bin/bash -c "grub-install /dev/$(</tmp/hdd_name)"
fi

arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
#===============================================================================




# START DAEMONS
#===============================================================================
#start system daemons
arch-chroot /mnt /bin/bash -c "systemctl enable acpid"
arch-chroot /mnt /bin/bash -c "systemctl enable ntpd"

# network managment
arch-chroot /mnt /bin/bash -c "systemctl enable avahi-daemon"
arch-chroot /mnt /bin/bash -c "systemctl enable wpa_supplicant"
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"

# NFS utils
arch-chroot /mnt /bin/bash -c "systemctl enable rpcbind"

# Cronie
arch-chroot /mnt /bin/bash -c "systemctl enable cronie.service"

#lightdm
arch-chroot /mnt /bin/bash -c "systemctl enable lightdm.service"
#===============================================================================





##Selekt HDD screan
#===============================================================================
dialog \
--backtitle 'PrimeArch Installer' \
--title 'Ende erreicht' \
--begin $BoxStartY $BoxStartX \
--menu "" 9 $BoxWhith 3 \
1 Rebooten \
2 Ausschalten \
3 Chroot \
2>/tmp/exit

case $(</tmp/exit) in
    	1 )
		umount -a
        	reboot ;;
    	2 )
		umount -a
        	poweroff ;;
    	3 )
        	arch-chroot /mnt ;;
esac
#===============================================================================





exit
